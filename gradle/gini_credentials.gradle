def getLocalProperties = {
    File propertiesFile = file('local.properties')
    if (propertiesFile.exists()) {
        Properties properties = new Properties()
        propertiesFile.withInputStream { instr ->
            properties.load(instr)
        }
        return properties
    }
}

if (!project.hasProperty('clientId')) {
    def clientId = getLocalProperties()?.getProperty('clientId')
    if (clientId == null) {
        throw new IllegalStateException("Missing clientId from ${projectDir}/local.properties.\nHint: Either create a ${projectDir}/local.properties file with clientId and clientSecret properties or pass them in as parameters with -PclientId and -PclientSecret.")
    }
    project.ext.set('clientId', clientId)
}
if (!project.hasProperty('clientSecret')) {
    def clientSecret = getLocalProperties()?.getProperty('clientSecret')
    if (clientSecret == null) {
        throw new IllegalStateException("Missing clientSecret from ${projectDir}/local.properties.\nHint: Either create a ${projectDir}/local.properties file with clientId and clientSecret properties or pass them in as parameters with -PclientId and -PclientSecret.")
    }
    project.ext.set('clientSecret', clientSecret)
}

task printGiniCredentials {
    doLast {
        println "Client ID: " + clientId
        println "Client Secret: " + clientSecret
    }
}