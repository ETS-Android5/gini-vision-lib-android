apply plugin: 'com.android.application'
apply from: rootProject.file('gradle/git_utils.gradle')
apply from: rootProject.file('gradle/gini_credentials.gradle')

def appVersionCode = gitCommitUnixTime()
def appVersionName = "${version}-${gitBranch()}-${gitHash()} (${appVersionCode})"

task printVersion {
    doLast {
        println "${appVersionName}"
    }
}

android {
    compileSdkVersion rootProject.ext.compileSdkVersion
    buildToolsVersion rootProject.ext.buildToolsVersion

    defaultConfig {
        applicationId "net.gini.android.vision.screenapiexample"
        minSdkVersion rootProject.ext.minSdkVersion
        targetSdkVersion rootProject.ext.targetSdkVersion
        versionCode appVersionCode
        versionName appVersionName

        // Use the test runner with JUnit4 support
        testInstrumentationRunner "android.support.test.runner.AndroidJUnitRunner"

        sourceSets {
            main {
                java.srcDirs += "$rootProject.projectDir/exampleShared/java"
            }
        }

    }

    signingConfigs {
        release {
            storeFile file(releaseKeystoreFile)
            storePassword releaseKeystorePassword
            keyAlias releaseKeyAlias
            keyPassword releaseKeyPassword
        }
    }

    buildTypes {
        debug {
            resValue 'string', 'gini_api_client_id', clientId
            resValue 'string', 'gini_api_client_secret', clientSecret
        }
        release {
            minifyEnabled true
            proguardFiles getDefaultProguardFile('proguard-android.txt'), 'proguard-rules.pro'
            signingConfig signingConfigs.release
            resValue 'string', 'gini_api_client_id', clientId
            resValue 'string', 'gini_api_client_secret', clientSecret
        }
    }
}

// For testing a released version
repositories {
    maven {
        url 'https://repo.gini.net/nexus/content/repositories/open'
    }
}

dependencies {
    implementation fileTree(dir: 'libs', include: ['*.jar'])
    implementation deps.appCompatv7

    implementation('com.karumi:dexter:4.2.0')

    implementation 'com.github.tony19:logback-android-core:1.1.1-6'
    implementation('com.github.tony19:logback-android-classic:1.1.1-6') {
        // workaround issue #73
        exclude group: 'com.google.android', module: 'android'
    }

    // For testing the local version
    implementation project(path: ':ginivision-network')
    // For testing a released version
    //implementation 'net.gini:gini-vision-lib-network:2.5.0'

    // For testing the local version
    implementation project(path: ':ginivision')
    // For testing a released version
    //implementation 'net.gini:gini-vision-lib:2.0.0-alpha.1'

    testImplementation deps.junit

    androidTestImplementation(deps.supportTestRunner, {
        exclude group: 'com.android.support', module: 'support-annotations'
    })
    androidTestImplementation deps.truth
    androidTestImplementation(deps.supportTestRules, {
        exclude group: 'com.android.support', module: 'support-annotations'
    })
    androidTestImplementation(deps.supportTestEspressoCore, {
        exclude group: 'com.android.support', module: 'support-annotations'
    })
    androidTestImplementation(deps.supportTestEspressoIntents, {
        exclude group: 'com.android.support', module: 'support-annotations'
    })
    androidTestImplementation deps.supportTestUiAutomator
    androidTestImplementation deps.mockito
    androidTestImplementation deps.mockitoAndroid
    androidTestImplementation deps.supportMultidex
}

apply from: rootProject.file('gradle/codequality.gradle')
apply from: rootProject.file('gradle/multidex_for_tests.gradle')