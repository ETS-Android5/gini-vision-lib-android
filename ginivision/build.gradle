apply plugin: 'com.android.library'

android {
    compileSdkVersion rootProject.ext.compileSdkVersion
    buildToolsVersion rootProject.ext.buildToolsVersion

    defaultConfig {
        minSdkVersion rootProject.ext.minSdkVersion
        targetSdkVersion rootProject.ext.targetSdkVersion

        // Use the test runner with JUnit4 support
        testInstrumentationRunner "android.support.test.runner.AndroidJUnitRunner"
    }
    buildTypes {
        release {
            minifyEnabled false
            proguardFiles getDefaultProguardFile('proguard-android.txt'), 'proguard-rules.pro'
        }
    }
}

dependencies {
    compile fileTree(dir: 'libs', include: ['*.jar'])
    compile deps.appCompatv7
    compile deps.supportv4
    compile deps.supportv13
    compile deps.supportDesign
    compile deps.sanselan
    compile deps.slf4j

    testCompile deps.junit
    testCompile deps.truth

    androidTestCompile deps.supportTestRunner
    androidTestCompile deps.truth
}

apply from: rootProject.file('gradle/codequality.gradle')

apply from: rootProject.file('gradle/maven.gradle')

android.libraryVariants.all { variant ->
    task("generate${variant.name.capitalize()}Javadoc", type: Javadoc) {
        source = variant.javaCompile.source
        exclude '**/BuildConfig.java'
        exclude '**/R.java'
        exclude '**/TouchImageView.java'
        failOnError = false
        options.showFromPublic()
        List pathList = new ArrayList();
        pathList.add(file("${project.rootDir}/tools/excludedoclet/doclet.jar"));
        options.docletpath = pathList
        options.doclet = "ExcludeDoclet"
        options.overview = 'src/main/java/net/gini/android/vision/overview.html'
        options.version = true
        options.author = true
        options.windowTitle = "Gini Vision Library for Android"
        options.docTitle = "Gini Vision Library for Android"

        doLast {
            copy {
                from "src/main/javadoc"
                into "$buildDir/docs/javadoc"
            }
        }
    }
}


